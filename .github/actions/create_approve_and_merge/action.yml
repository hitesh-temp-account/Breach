# Copyright (c) LinkedIn Corporation.
# All rights reserved.
#
# This source code is licensed under the license found in the
# LICENSE file in the root directory of this source tree.

name: 'Create, Approve and Merge PR to update README'
description: 'Creates, approves and merges a pull request to update README.md'
inputs:
  title:
    description: 'Title for PR created by GitHub Action to update README.md'
    required: true
  summary:
    description: 'Summary for PR created by GitHub Action to update README.md'
    required: true
  create-pr-app-id:
    description: 'GitHub App ID for creating PR'
    required: true
  create-pr-app-private-key:
    description: 'GitHub App Private Key for creating PR'
    required: true
  approve-pr-app-id:
    description: 'GitHub App ID for approving PR'
    required: true
  approve-pr-app-private-key:
    description: 'GitHub App Private Key for approving PR'
    required: true
  github-token:
    description: 'GitHub token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Generate GitHub App token for PR creation
      id: create-pr-github-app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.create-pr-app-id }}
        private-key: ${{ inputs.create-pr-app-private-key }}

    - name: Setup Git and create PR
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "<${{ github.actor }}@linkedin.com>"
        unique_id=$(shuf -i 10000000-99999999 -n 1)
        git checkout -b readme-badge-update-$unique_id
        git add README.md
        git commit -m "${{ inputs.summary }}"
        git push origin readme-badge-update-$unique_id
        pr=$(gh pr create --title "${{ inputs.title }}" --head readme-badge-update-$unique_id --base main --body "${{ inputs.summary }}")
        IFS='/' read -ra pr_parts <<< "$pr"
        echo "PR_NUMBER=${pr_parts[${#pr_parts[@]}-1]}" >> $GITHUB_ENV
        echo "PR number: $PR_NUMBER"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.create-pr-github-app-token.outputs.token }}

    - name: Generate GitHub App token for PR approval
      if: ${{ env.PR_NUMBER }}
      id: approve-pr-github-app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.approve-pr-app-id }}
        private-key: ${{ inputs.approve-pr-app-private-key }}

    - name: Approve PR
      if: ${{ env.PR_NUMBER }}
      run: |
        gh pr review ${{ env.PR_NUMBER }} --approve
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.approve-pr-github-app-token.outputs.token }}

    - name: Turn on PR Auto-Merge
      if: ${{ env.PR_NUMBER }}
      run: |
        gh pr merge ${{ env.PR_NUMBER }} --squash --auto --body "${{ inputs.summary }}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
