# .github/actions/approve_and_merge/action.yml 
name: 'Approve and Merge PR'
description: 'Approves and merges a pull request'
inputs:
  title:
    description: 'title'
    required: true
  commit-message:
    description: 'commit message'
    required: true
  app-id:
    description: 'github app id'
    required: true
  app-private-key:
    description: 'github app private key'
    required: true
  github-token:
    description: 'github token'
    required: true
  add-paths:
    description: 'path of the required changes'
    required: false
runs:
  using: 'composite'
  steps:
    - name: my-app-install token
      id: my-app
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.app-private-key }}

    # - name: Save Workflow Status to JSON
    #   run: >
    #     echo '{"token": "${{ steps.my-app.outputs.token }}"}' >> .github/badges/token.json
    #     git add .
    #   shell: bash

    # - name: Display Workflow Status
    #   run: |
    #     cat .github/badges/token.json
    #   shell: bash
  
    # - name: Create PR
    #   id: create-pr
    #   uses: peter-evans/create-pull-request@v5
    #   with:
    #     base: main
    #     branch: github-actions/readme-update
    #     delete-branch: true
    #     author: ${{ github.actor }} <${{ github.actor }}@linkedin.com>
    #     title: ${{ inputs.title }}
    #     body: ${{ env.COMMIT_MESSAGE }}
    #     commit-message: ${{ env.COMMIT_MESSAGE }}
    #     token: ${{ inputs.github-token }}
    #     add-paths: ${{ inputs.add-paths }}

    # - name: pr number
    #   run: | 
    #     echo "pr number : ${{ steps.create-pr.outputs.pull-request-number }}"
    #   shell: bash

    - name: Set up Git
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "<${{ github.actor }}@linkedin.com>"
      shell: bash

    - name: Determine if there are changes
      run: |
        changes=$(git diff --name-only ${{ inputs.add-paths }})
        if [ -z "$changes" ]; then
          echo "No changes to commit. Exiting..."
          echo "check_changes=false" >> $GITHUB_ENV
        else
          echo "check_changes=true" >> $GITHUB_ENV
          echo "Changes detected. Continuing with the workflow."
        fi
      shell: bash

    - name: Create branch
      if: env.check_changes == 'true'
      run: |
        git checkout -b feature-branch
      shell: bash

      # Add your build/test steps here

    - name: Commit and push changes
      if: env.check_changes == 'true'
      run: |
        git add ${{ inputs.add-paths }}
        git commit -m "Auto-generated changes"
        git push origin feature-branch
      shell: bash

    - name: Create Pull Request
      id: create_pr
      if: env.check_changes == 'true'
      run: |
        pr_number=$(curl -X POST -H "Authorization: Bearer ${{ inputs.github-token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          -d '{"title":"${{ inputs.title }}","head":"feature-branch","base":"main","body":"${{ inputs.commit-message }}"}' | jq -r '.number')

        echo "PR number: $pr_number"
        echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
      shell: bash
            
    - name: Approve PR
      if: ${{ env.PR_NUMBER }}
      run: |
        gh pr review ${{ env.PR_NUMBER }} --approve
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.my-app.outputs.token }}

    - name: Turn On PR Auto-Merge
      if: ${{ env.PR_NUMBER }}
      run: |
        gh pr merge --squash --auto --repo ${{ github.repository }} --delete-branch ${{ env.PR_NUMBER }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
