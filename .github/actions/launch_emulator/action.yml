name: 'Launch emulator and run tests'
description: 'Launches an Android emulator and runs the input script'
inputs:
  script:
    description: 'Script runs after succesful launch of the emulator'

defaults:
  run:
    shell: bash

env:
  ANDROID_BUILD_TOOLS_VERSION: 30.0.2

runs:
  using: 'composite'
  steps:
      - name: Add `avdmanager` and `sdkmanager` to System PATH
        run: |
            echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH
        shell: bash

      - name: SDK package licenses agreement
        run: |
          chmod +x ./.github/scripts/accept_license.exp
          ./.github/scripts/accept_license.exp
        shell: bash

      - name: Install System Image
        run: |
            sdkmanager --install 'system-images;android-30;google_apis_playstore;x86_64'
        shell: bash

      - name: Create Emulator
        id: create_emulator
        run: echo "no" | avdmanager create avd -n TestEmulator30 -k "system-images;android-30;google_apis_playstore;x86_64"
        shell: bash

      - name: Check Emulator Creation Status
        run: |
          if [ $? -eq 0 ]; then  # Verfies the exit status of the last executed command i.e. "create_emulator", if it is 0 then the emulator is created succesfully.
            echo "Emulator creation successful"
          else
            echo "Emulator creation failed"
            exit 1
          fi
        shell: bash

      - name: Restart adb server
        run: |
          adb kill-server
          adb start-server
        shell: bash

      - name: Launch Emulator
        run: |
          echo "Starting emulator and waiting for boot to complete...."
          $ANDROID_HOME/emulator/emulator -avd TestEmulator30 -no-skin -no-audio -no-window &
          adb wait-for-device 
          echo "Emulator has finished booting"
          adb devices
        shell: bash

      - name: Build App
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug
        shell: bash

      - name: Find and install App
        run: |
          apk_path=$(find . -type f -and -path '*debug.apk')
          echo $apk_path
          adb -s emulator-5554 install /Users/runner/work/breach/breach/app/build/outputs/apk/debug/app-debug.apk
        shell: bash

      - name: Run script
        run: bash -c "${{ inputs.script }}"
        shell: bash

      - name: Uninstall the app
        run: |
          adb shell pm uninstall com.example.breach
        shell: bash
