name: Code coverage

on: 
  workflow_dispatch:
      
jobs:
  code-coverage:
    name: unit tests coverage
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: run tests
        id: report-files
        if: github.ref != 'refs/heads/main'
        run: |
          current_branch=${{ github.ref }}
          echo "first - $current_branch"
          chmod +x gradlew
          ./gradlew debugCoverage --continue
          {
            echo 'file_paths<<EOF'
            find . -type f -and -path '*build/reports/jacoco/debugCoverage/html/index.html' 
            echo EOF
          } >> "$GITHUB_OUTPUT"
          
      - name: gen report
        if: github.ref != 'refs/heads/main'
        id: coverage-list
        run: |
          chmod +x ./.github/scripts/code_coverage.py
          table_string=$(python3 ./.github/scripts/code_coverage.py "${{ steps.report-files.outputs.file_paths}}" "null")
          echo "table_string=$table_string" >> $GITHUB_OUTPUT

      - name: checkout code
        if: github.ref != 'refs/heads/main'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      - name: run tests
        id: base-report-files
        run: |
          current_branch=${{ github.base_ref }}
          echo "second - $current_branch"
          chmod +x gradlew
          ./gradlew debugCoverage --continue
          {
            echo 'file_paths<<EOF'
            find . -type f -and -path '*build/reports/jacoco/debugCoverage/html/index.html' 
            echo EOF
          } >> "$GITHUB_OUTPUT"
      - name: gen report
        run: |
          chmod +x ./.github/scripts/code_coverage.py
          result=$(python3 ./.github/scripts/code_coverage.py "${{ steps.base-report-files.outputs.file_paths}}" "${{ steps.coverage-list.outputs.table_string}}")
          echo "$result" >> $GITHUB_STEP_SUMMARY
