#  Copyright 2019 Foo. All rights reserved. MIT license.
name: Check license

on: 
  workflow_dispatch:

jobs:
  update-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: get json
        run: |
          content=$(cat .licenserc.json)
          echo "content: $content"

          # Read the JSON content
          
          # Initialize an empty array to store the keys
          keys=()

          # Extract keys from the JSON object and append them to the array
          while IFS= read -r key; do
            keys+=("$key")
          done < <(jq -r 'keys | .[]' <<< "$content")

          # keys=$(jq -r 'keys | .[]' <<< "$content")

          # Print the keys
          printf '%s\n' "${keys[@]}"

          # Initialize a variable to keep track of whether there are files without a license
          # has_files_without_license=false

          excluded_paths=$(jq -r '.ignore | .[]' <<< "$content")
          echo "ignore: $excluded_paths"

          # Iterate over each .yml file and check for the presence of key2_value
          for key in "${keys[@]}"; do
            # Construct the find command
            # find_command="find . -type f -name \"$key\""

            # Add exclusions for each path in the excluded_paths array
            # for path in "${excluded_paths[@]}"; do
            #   find_command+=" -not -path \"$path/*\""
            # done

            # echo "find command: $find_command"
            
            # Execute the find command and store the result in the files variable
            # files=$(eval "$find_command")
            # echo "files: $files"
            
            files=$(find . -type f -name "$key" -not \( -path "*/test/*" -o -path "*/test-app/*" \))
            
            value=$(echo "$content" | jq -r --arg key "$key" '.[$key]')
            
            for file in $files; do
              if grep -qF "$value" "$file"; then
                echo "$file ✅"
              else
                # has_files_without_license=true
                echo "$file ❌"
              fi
            done
          done

          # If there are files without a license, fail the workflow
          # if ! $has_files_without_license; then
          #   echo "Failing this workflow as there is atleast one file present without license."
          #   exit 1
          # fi
        shell: bash
