name: Measure coverage

on:
  push:
    branches:
      - main

env:
  COMMIT_MESSAGE: |
    Update jacoco badge

    Created by GitHub Action [${{ github.workflow }} #${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # - name: Grant execute permission for gradlew
      #   run: chmod +x gradlew

      # - name: Run Module Coverage
      #   run: ./gradlew debugCoverage --continue

      # - name: print csv files
      #   id: csv_files
      #   run: |
      #     original_string=$(find . -type f -name "debugCoverage.csv" \( -path "*app*" -o -path "*paymentGateway*" \))
      #     modified_string=$(echo "$original_string" | tr ' ' '\n')
      #     echo "CSV=$modified_string" >> $GITHUB_ENV

      - name: Get Old Percentage
        id: get_old_percentage
        run: |
          old_percentage=$(sed -nE 's/.*coverage-([0-9]+\.[0-9]+)\%25.*/\1/p' README.md)
          echo "old: $old_percentage"
          echo "OLD=$old_percentage" >> $GITHUB_ENV

      - name: Update Badge
        run: |
          # Replace the coverage percentage
          new_percentage=29.56  # Replace with your desired percentage

          # Compare old and new percentages
          old_percentage="${{ env.OLD }}"
          if [ "$old_percentage" != "$new_percentage" ]; then
            sed -i "s/coverage-$old_percentage\%25/coverage-$new_percentage\%25/" README.md
            echo "updated the percentage: $new_percentage"

            # Update the color based on the percentage
            if (( $(echo "$new_percentage < 33.00" | bc -l) )); then
              sed -i "s/%25-[^.]*.svg)/%25-red.svg)/" README.md
              echo "updated to red"
            else
              echo "updated to green"
              sed -i "s/%25-[^.]*.svg)/%25-green.svg)/" README.md
            fi
            cat README.md
          fi
          git status
      
      # - name: Generate JaCoCo Badge
      #   id: jacoco
      #   uses: cicirello/jacoco-badge-generator@v2
      #   with:
      #     jacoco-csv-file: >
      #       ${{ env.CSV }}

      # - name: Log coverage percentage
      #   run: |
      #     echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
      #     echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      # - name: Set up Git
      #   run: |
      #     git config --global user.name "${{ github.actor }}"
      #     git config --global user.email "<${{ github.actor }}@linkedin.com>"

      # - name: Determine if there are changes
      #   run: |
      #     changes=$(git diff --name-only */jacoco.svg)
      #     if [ -z "$changes" ]; then
      #       echo "No changes to commit. Exiting..."
      #       echo "check_changes=false" >> $GITHUB_ENV
      #     else
      #       echo "check_changes=true" >> $GITHUB_ENV
      #       echo "Changes detected. Continuing with the workflow."
      #     fi

      # - name: Create branch
      #   if: env.check_changes == 'true'
      #   run: |
      #     git checkout -b feature-branch

      # # Add your build/test steps here

      # - name: Commit and push changes
      #   if: env.check_changes == 'true'
      #   run: |
      #     git add */jacoco.svg
      #     git commit -m "Auto-generated changes"
      #     git push origin feature-branch

      # - name: Create Pull Request
      #   id: create_pr
      #   if: env.check_changes == 'true'
      #   run: |
      #     pr_number=$(curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       -H "Accept: application/vnd.github.v3+json" \
      #       https://api.github.com/repos/${{ github.repository }}/pulls \
      #       -d '{"title":"Auto-generated Pull Request","head":"feature-branch","base":"main","body":"This PR is automatically generated."}' | jq -r '.number')

      #     echo "PR number: $pr_number"
      #     echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV


      # - name: my-app-install token
      #   id: my-app
      #   uses: actions/create-github-app-token@v1
      #   with:
      #     app-id: ${{ secrets.ALTERNATE_APP_ID }}
      #     private-key: ${{ secrets.ALTERNATE_APP_PRIVATE_KEY }}

      # - name: print app token
      #   run: |
      #     echo "APP_TOKEN=${{ steps.my-app.outputs.token }}" >> $GITHUB_ENV

      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          base: main
          branch: github-actions/readme-update
          delete-branch: true
          author: ${{ github.actor }} <${{ github.actor }}@linkedin.com>
          title: 'Update readme'
          body: ${{ env.COMMIT_MESSAGE }}
          commit-message: ${{ env.COMMIT_MESSAGE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          add-paths: README.md
            
      - name: pr number
        run: | 
          echo "pr number : ${{ steps.create-pr.outputs.pull-request-number }}"

      # - name: Create, Approve and Merge PR
      #   uses: ./.github/actions/create_approve_and_merge
      #   with:
      #     title: 'custom title'
      #     commit-message: 'test commit message'
      #     app-id: ${{ secrets.ALTERNATE_APP_ID }}
      #     app-private-key: ${{ secrets.ALTERNATE_APP_PRIVATE_KEY }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     add-paths: README.md
          
      - name: Approve PR
        if: steps.create-pr.outputs.pull-request-number
        run: |
           gh pr review ${{ steps.create-pr.outputs.pull-request-number }} --approve
           echo "approved"
        env:
           GITHUB_TOKEN: ${{ env.APP_TOKEN }}

      - name: Turn On PR Auto-Merge
        id: auto-merge
        if: steps.create-pr.outputs.pull-request-number
        run: >
          gh pr merge --squash --auto 
          --repo ${{ github.repository }} --delete-branch
          ${{ steps.create-pr.outputs.pull-request-numberR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
