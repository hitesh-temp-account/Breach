name: Measure coverage

on:
  push:
    branches:
      - main

env:
  COMMIT_MESSAGE: |
    Update jacoco badge

    Created by GitHub Action [${{ github.workflow }} #${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Get Old Percentage
        id: get_old_percentage
        run: |
          old_percentage=$(sed -nE 's/.*coverage-([0-9]+\.[0-9]+)\%25.*/\1/p' README.md)
          echo "old: $old_percentage"
          echo "OLD=$old_percentage" >> $GITHUB_ENV

      - name: Get new percentage
        id: get_new_percentage
        run: |
          chmod +x gradlew
          ./gradlew debugCoverage --continue
          files=$(find . -type f -and -path '*/build/reports/jacoco/debugCoverage/html/index.html')
          chmod +x ./.github/scripts/code_coverage.py
          table_string=$(python3 ./.github/scripts/code_coverage.py "$files" "")
          echo "$table_string"
          IFS=',' read -ra table_list <<< "$table_string"
          length=${#table_list[@]}
          coverage=${table_list[$length-1]}
          echo "new: $coverage"
          echo "NEW=$coverage" >> $GITHUB_ENV

      - name: Update Badge
        run: |
          new_percentage="${{ env.NEW }}"
          old_percentage="${{ env.OLD }}"
          echo "COVERAGE_CHANGED=false" >> $GITHUB_ENV
          if [ "$old_percentage" != "$new_percentage" ]; then
            echo "COVERAGE_CHANGED=true" >> $GITHUB_ENV
            sed -i "s/coverage-$old_percentage\%25/coverage-$new_percentage\%25/" README.md
            echo "updated the percentage: $new_percentage"
            color=""
            if [ $(echo "$new_percentage < 35.00" | bc -l) ]; then
              color="red"
              echo "updated to red"
            else
              echo "updated to green"
              color="green"
            fi
            sed -i "s/%25-[^.]*.svg)/%25-$color.svg)/" README.md
            cat README.md
          fi
          git status
      
      - name: Create, Approve and Merge PR
        if: env.COVERAGE_CHANGED == true
        uses: ./.github/actions/create_approve_and_merge
        with:
          title: 'custom title'
          commit-message: 'test commit message'
          create-pr-app-id: ${{ secrets.APP_ID }}
          create-pr-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.ALTERNATE_APP_ID }}
          app-private-key: ${{ secrets.ALTERNATE_APP_PRIVATE_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          add-paths: README.md
          
      # - name: Approve PR
      #   if: steps.create-pr.outputs.pull-request-number
      #   run: |
      #      gh pr review ${{ steps.create-pr.outputs.pull-request-number }} --approve
      #      echo "approved"
      #   env:
      #      GITHUB_TOKEN: ${{ env.APP_TOKEN }}

      # - name: Turn On PR Auto-Merge
      #   id: auto-merge
      #   if: steps.create-pr.outputs.pull-request-number
      #   run: >
      #     gh pr merge --squash --auto 
      #     --repo ${{ github.repository }} --delete-branch
      #     ${{ steps.create-pr.outputs.pull-request-numberR }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
