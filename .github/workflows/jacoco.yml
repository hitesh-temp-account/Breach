name: Code Coverage Reporttttt

on:
  push:
    branches:
      - main

jobs:
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Get old coverage
        run: |
          old_coverage=$(sed -nE 's/.*coverage-([0-9]+\.[0-9]+)\%25.*/\1/p' README.md)
          echo "Old Coverage: $old_coverage"
          echo "OLD_COVERAGE=$old_coverage" >> $GITHUB_ENV

      - name: Run unit tests and generate coverage reports
        run: |
          chmod +x gradlew
          ./gradlew debugCoverage --continue

      - name: Generate JaCoCo report files
        id: jacoco-report-files
        run: |
          {
            echo 'file_paths<<EOF'
            find . -type f -and -path '*/build/reports/jacoco/debugCoverage/html/index.html'
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Generate code coverage report
        run: |
          chmod +x ./.github/scripts/code_coverage.py
          report_summary=$(python3 ./.github/scripts/code_coverage.py "${{ steps.jacoco-report-files.outputs.file_paths }}")
          echo "$report_summary" >> $GITHUB_STEP_SUMMARY
          echo "REPORT SUMMARY BELOW:"
          echo "$report_summary"
          echo "REPORT_SUMMARY=$report_summary" >> $GITHUB_ENV

      - name: Get new coverage
        run: |
          report_summary="${{ env.REPORT_SUMMARY }}"
          echo "TIMEPASS PRINT"
          new_coverage=$(echo "$report_summary" | grep -oP '(?<=Total Coverage<\/b><\/td><td><b><img src=https:\/\/img\.shields\.io\/badge\/)\d+\.\d+(?=%25-green\.svg>)')
          echo "New Coverage: $new_coverage"
          echo "NEW_COVERAGE=$new_coverage" >> $GITHUB_ENV

      - name: Update badge
        run: |
          old_coverage="${{ env.OLD_COVERAGE }}"
          new_coverage="${{ env.NEW_COVERAGE }}"
          echo "COVERAGE_CHANGED=false" >> $GITHUB_ENV
          echo "old and new coverage"
          echo "$old_coverage"
          echo "$new_coverage"
          if [ "$old_coverage" != "$new_coverage" ]; then
            echo "COVERAGE_CHANGED=true" >> $GITHUB_ENV
            color=""
            if (( $(echo "$new_coverage < 35.00" | bc -l) )); then
              color="red"
            else
              color="green"
            fi
            sed -i "s/coverage-.*.svg)/coverage-$new_coverage\%25-$color.svg)/" README.md
          fi

      - name: Create, Approve and Merge PR
        if: env.COVERAGE_CHANGED == 'true'
        uses: ./.github/actions/create_approve_and_merge_pr
        with:
          title: 'Update JaCoCo badge in README.md'
          commit-message: ${{ env.COMMIT_MESSAGE }}
          create-pr-app-id: ${{ secrets.AUTO_CREATE_ID }}
          create-pr-app-private-key: ${{ secrets.AUTO_CREATE_PRIVATE_KEY }}
          approve-pr-app-id: ${{ secrets.AUTO_APPROVE_ID }}
          approve-pr-app-private-key: ${{ secrets.AUTO_APPROVE_PRIVATE_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
