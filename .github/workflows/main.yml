name: My test workflow

on:
  push:
    branches:
      - main
    paths:
      - 'gradle.properties'

env:
  COMMIT_MESSAGE: |
    Update Baseline Profile

    Created by GitHub Action [${{ github.workflow }} #${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

    ACLOVERRIDE CODEOWNEROVERRIDE CUSTOMVALIDATIONSOVERRIDE

jobs:
  update-badge:
    runs-on: ubuntu-latest

    permissions:
      #      issues: write
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      #     - name: Set up Java
      #       uses: actions/setup-java@v2
      #       with:
      #          distribution: 'adopt'
      #          java-version: '11'

      #     - name: Read Version Number
      #       id: version
      #       run: |
      #            version=$(grep '^version' gradle.properties | cut -d= -f2 | tr -d '[:space:]')
      #            echo "VERSION: $version"

      - name: Get previous version
        id: get-previous-version
        run: |
          echo "::set-output name=prev_version::$(git log --format="%h" -n 2 -- gradle.properties | tail -n 1 | xargs git show | grep '^version' | cut -d= -f2 | tr -d '[:space:]')"
      - name: Get current version
        id: get-current-version
        run: |
          echo "::set-output name=current_version::$(grep '^version' gradle.properties | cut -d= -f2 | tr -d '[:space:]')"

      - name: Check for version change
        run: |
          echo "Previous version: ${{ steps.get-previous-version.outputs.prev_version }}"
          echo "Current version: ${{ steps.get-current-version.outputs.current_version }}"
          if [ "${{ steps.get-previous-version.outputs.prev_version }}" = "${{ steps.get-current-version.outputs.current_version }}" ]; then
            echo "No version change. Exiting workflow."
            exit 0
          fi

      - name: Update README Badge
        run: |
          version=$(grep '^version' gradle.properties | cut -d= -f2 | tr -d '[:space:]')
          # echo "VERSION: $version"
          # echo "badge\/version-v$version-blue.svg"
          sed -i "s/\(badge\/version-v[0-9]\.[0-9]-blue\.svg\)/badge\/version-v$version-blue.svg/" README.md
          cat README.md

      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          base: main
          branch: github-actions/readme-update
          delete-branch: true
          author: ${{ github.actor }} <${{ github.actor }}@linkedin.com>
          title: 'Update readme'
          body: ${{ env.COMMIT_MESSAGE }}
          commit-message: ${{ env.COMMIT_MESSAGE }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Turn On PR Auto-Merge
        run: >
          gh pr merge --squash --auto
          --repo ${{ github.repository }}
          ${{ steps.create-pr.outputs.pull-request-number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch
        run: |
          git push origin --delete github-actions/readme-update
