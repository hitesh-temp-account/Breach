name: Spandan workflow

on:
  pull_request:
    branches:
      - '*'

env:
  COMMIT_MESSAGE: |
    Update Baseline Profile

    Created by GitHub Action [${{ github.workflow }} #${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

    ACLOVERRIDE CODEOWNEROVERRIDE CUSTOMVALIDATIONSOVERRIDE

jobs:
  update-badge:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{  github.head_ref }}
          fetch-depth: 0

      - name: Update line number in README Badge
        run: |
          current_line=$(grep -n '^VERSION_NAME=' gradle.properties | cut -d ":" -f1)
          echo "$current_line"
          sed -i "s/properties#L[0-9]*)/properties#L1\)/" README.md
          cat README.md

      # - name: Create PR
      #   id: create-pr
      #   uses: peter-evans/create-pull-request@v5
      #   with:
      #     base: main
      #     branch: github-actions/readme-update
      #     delete-branch: true
      #     author: ${{ github.actor }} <${{ github.actor }}@linkedin.com>
      #     title: 'Update readme'
      #     body: ${{ env.COMMIT_MESSAGE }}
      #     commit-message: ${{ env.COMMIT_MESSAGE }}
      #     token: ${{ env.APP_TOKEN }}
      #     add-paths: README.md
            
      # - name: pr number
      #   run: | 
      #     echo "pr number : ${{ steps.create-pr.outputs.pull-request-number }}"

      # - name: Approve PR
      #   if: |
      #      env.version_change == 'true' ||
      #      env.VERSION_LINE_CHANGED == 'true'
      #   run: |
      #      gh pr review ${{ steps.create-pr.outputs.pull-request-number }} --approve
      #      echo "approved"
      #   env:
      #      GITHUB_TOKEN: ${{ env.ALTERNATE_APP_TOKEN }}

      # - name: Turn On PR Auto-Merge
      #   id: auto-merge
      #   if: |
      #     env.version_change == 'true' ||
      #     env.VERSION_LINE_CHANGED == 'true'
      #   run: >
      #     gh pr merge --squash --auto --repo
      #     ${{ github.repository }} --delete-branch
      #     ${{ steps.create-pr.outputs.pull-request-number }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Print output of auto merge
      #   run: |
      #     echo "output: ${{ steps.auto-merge.outputs.success }}"

      # - name: Wait for checks to complete
      #   if: ${{ steps.create-pr.outputs.pull-request-number }}
      #   run: |
      #     echo "pr number: ${{ steps.create-pr.outputs.pull-request-number }}"
      #     # Replace 'YOUR-ACCESS-TOKEN' with your actual GitHub access token
      #     ACCESS_TOKEN=${{ env.APP_TOKEN }}
      #     REPO_OWNER="hitesh-temp-account"
      #     REPO_NAME="Breach"
      #     pr_merged="false"
      #     # pr_merged=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls/${{ steps.create-pr.outputs.pull-request-number }}" | jq -r '.merged')
      #     # echo "status: $pr_merged"
      #     timer=0

      #     while [[ "$pr_merged" != "true" && $timer -lt 9 ]]; do
      #       sleep 5
          
      #       # Get PR info
      #       PR=$(curl -s -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls/${{ steps.create-pr.outputs.pull-request-number }}")
      #       echo "pr: $PR"
      #       pr_merged=$(echo "$PR" | jq -r '.merged')
      #       echo "State of the PR: $pr_merged"
      #       timer=$((timer+5))
      #     done

      #     if [ "$pr_merged" == "true" ]; then
      #       echo "PR checks passed. Deleting branch."
      #       git push origin --delete github-actions/readme-update
      #     else
      #       echo "PR checks failed. Keeping the branch."
      #     fi

